name: CI

on:
  workflow_dispatch:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend (.NET)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore
        run: |
          dotnet restore .\src\server\server.csproj
          dotnet restore .\src\tests\Tests.csproj

      - name: Build server
        run: dotnet build .\src\server\server.csproj -c Release --nologo --no-restore

      - name: Build tests (so the DLL exists)
        run: dotnet build .\src\tests\Tests.csproj -c Release --nologo --no-restore

      - name: Test
        run: dotnet test .\src\tests\Tests.csproj -c Release --no-build --logger "trx;LogFileName=tests.trx"

      # Formatting is advisory for now (won't fail CI). Remove continue-on-error later to enforce.
      - name: dotnet-format (advisory)
        continue-on-error: true
        run: |
          dotnet tool update -g dotnet-format
          echo "$Env:USERPROFILE\.dotnet\tools" | Out-File -FilePath $Env:GITHUB_PATH -Append
          dotnet format --verify-no-changes

  frontend:
    name: Frontend (Vite/React)
    runs-on: windows-latest
    defaults:
      run:
        working-directory: src/client
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: src/client/package-lock.json

      # Use npm ci if lockfile exists; otherwise npm install
      - name: Install deps
        shell: bash
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      # These steps *skip* if the script doesn't exist, so your CI won't fail.
      - name: Typecheck (skip if script missing)
        shell: bash
        run: |
          npm run -s typecheck || echo "No typecheck script; skipping"

      - name: Lint (skip if script missing)
        shell: bash
        run: |
          npm run -s lint || echo "No lint script; skipping"

      - name: Build
        run: npm run build
